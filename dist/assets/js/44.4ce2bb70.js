(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{396:function(t,s,v){"use strict";v.r(s);var _=v(25),n=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"udp-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#udp-协议"}},[t._v("#")]),t._v(" UDP 协议")]),t._v(" "),v("p",[t._v("是一种无连接的传输层协议，提供面向事务的简单不可靠的传输服务。")]),t._v(" "),v("p",[t._v("主要有以下特点：")]),t._v(" "),v("ul",[v("li",[t._v("UDP 是"),v("strong",[t._v("无连接")]),t._v("的，减少开销和发送数据之前的时间延迟。大家都知道 TCP 的"),v("strong",[t._v("三次握手和四次分手")]),t._v("，这个是需要时间花销的，但是 UDP 没有这部分花销。")]),t._v(" "),v("li",[t._v("UDP 使用"),v("strong",[t._v("最大努力交付")]),t._v("，即不保证可靠交付。那谁来保证可靠的交付呢？是由 UDP 的上一层协议，应用层来保证。")]),t._v(" "),v("li",[t._v("UDP 是"),v("strong",[t._v("面向报文的")]),t._v("，适合一次性传输少量数据的网络应用。什么意思呢，如下图，UDP 这层，把应用层的全部内容作为自己的数据报部分，在 IP 层也只是加了一个 IP 首部，我们知道，在以太网，链路层上的数据如果超过 1500 字节，就会分片，所以网络层发现上面传输层给了太大的数据就会分片，加上 UDP 是不可靠的协议，这就加大了 UDP 的"),v("strong",[t._v("不可靠性")]),t._v("，容易丢失，所以 UDP 适合数据量少的。")])]),t._v(" "),v("img",{staticClass:"zoom-custom-imgs",attrs:{src:"/img/question/network/udp.png",alt:"UDP",title:"UDP"}}),t._v(" "),v("ul",[v("li",[v("p",[t._v("UDP 没有拥塞控制，适合很多实时应用。也就是说如果网络堵塞，UDP 不管那么多，照样按照自己的速率发数据，那有些人就会说，这协议是不是有点坑 B，路都堵上了，还发死劲发数据呢，但是反过来看，这也是 UDP 的优点，它允许丢包，如果你的网络情况还不错，UDP 就非常适合实时应用，比如视频会议。")])]),t._v(" "),v("li",[v("p",[t._v("UDP 首部较小，只有 8 字节，而 TCP 由 20 字节。这也是减少网络传输开销的一方面。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);